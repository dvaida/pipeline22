# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Lint
        run: pip install flake8 && flake8 . --extend-exclude=dist,build --show-source --statistics

      - name: Test
        run: pip install -r requirements.txt && pip install pytest && pytest -v tests/* --junitxml=test-reports/report.xml

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      # Runs a set of commands using the runners shell
      - name: Docker
        run: |
          # pip install -r requirements.txt
          poetry version patch
          export VERSION=$(poetry version | awk '{print $2}')
          rm -Rf kubernetes/deploy && mkdir kubernetes/deploy && cp kubernetes/*.yaml kubernetes/deploy/
          sed 's/__VERSION__/'$VERSION'/g' kubernetes/kustomization.yaml > kubernetes/deploy/kustomization.yaml
          git config user.name "GitHub Actions"
          git config user.email "<>"
          git add kubernetes/deploy && git commit -am "Version bump to $VERSION [skip ci]"
          docker build -t ${{ secrets.DOCKER_HUB_USER }}/pipeline22:$VERSION -f docker/Dockerfile .
          docker push ${{ secrets.DOCKER_HUB_USER }}/pipeline22:$VERSION
          git push origin master # Will trigger deploy to Argo
